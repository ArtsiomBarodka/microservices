apiVersion: v1
kind: ConfigMap
metadata:
  name: order-orchestrator
data:
  application.properties: |-
    spring.cloud.loadbalancer.ribbon.enabled=false
    spring.cloud.discovery.locator.enabled=true
    spring.cloud.kubernetes.loadbalancer.enabled=true
    spring.cloud.kubernetes.enabled=true
    
    kafka.orderOrchestrator.bootstrapAddress=kafka:9092
    kafka.orderOrchestrator.groupId=order-orchestrator
    kafka.orderOrchestrator.topic.newOrder.name=newOrder
    kafka.orderOrchestrator.topic.newOrder.partitions=3
    kafka.orderOrchestrator.consumer.newOrder.count=3

    app.operation.retry.count=3
    app.client.products.host=http://product
    app.client.customers.host=http://customer
    app.client.orders.host=http://order

    spring.sleuth.sampler.probability=1
    spring.zipkin.baseUrl=http://zipkin:9411
    spring.zipkin.sender.type=web
    spring.sleuth.messaging.kafka.enabled=true

    resilience4j.circuitbreaker.circuit-breaker-aspect-order=1
    resilience4j.retry.retry-aspect-order=2

    resilience4j.circuitbreaker.instances.customer.registerHealthIndicator=true
    resilience4j.circuitbreaker.instances.customer.slidingWindowSize=10
    resilience4j.circuitbreaker.instances.customer.minimumNumberOfCalls=7
    resilience4j.circuitbreaker.instances.customer.failureRateThreshold=60
    resilience4j.circuitbreaker.instances.customer.slowCallDurationThreshold=10s
    resilience4j.circuitbreaker.instances.customer.permittedNumberOfCallsInHalfOpenState=3
    resilience4j.circuitbreaker.instances.customer.waitDurationInOpenState=1m
    resilience4j.circuitbreaker.instances.customer.ignoreExceptions[0]=com.my.app.model.exception.ApiRejectedException
  
    resilience4j.retry.instances.customer.maxAttempts=3
    resilience4j.retry.instances.customer.waitDuration=5s
    resilience4j.retry.instances.customer.enableExponentialBackoff=true
    resilience4j.retry.instances.customer.exponentialBackoffMultiplier=2
    resilience4j.retry.instances.customer.ignoreExceptions[0]=com.my.app.model.exception.ApiRejectedException

    resilience4j.circuitbreaker.instances.product.registerHealthIndicator=true
    resilience4j.circuitbreaker.instances.product.slidingWindowSize=10
    resilience4j.circuitbreaker.instances.product.minimumNumberOfCalls=7
    resilience4j.circuitbreaker.instances.product.failureRateThreshold=60
    resilience4j.circuitbreaker.instances.product.slowCallDurationThreshold=10s
    resilience4j.circuitbreaker.instances.product.permittedNumberOfCallsInHalfOpenState=3
    resilience4j.circuitbreaker.instances.product.waitDurationInOpenState=1m
    resilience4j.circuitbreaker.instances.product.ignoreExceptions[0]=com.my.app.model.exception.ApiRejectedException

    resilience4j.retry.instances.product.maxAttempts=3
    resilience4j.retry.instances.product.waitDuration=5s
    resilience4j.retry.instances.product.enableExponentialBackoff=true
    resilience4j.retry.instances.product.exponentialBackoffMultiplier=2
    resilience4j.retry.instances.product.ignoreExceptions[0]=com.my.app.model.exception.ApiRejectedException

    resilience4j.circuitbreaker.instances.order.registerHealthIndicator=true
    resilience4j.circuitbreaker.instances.order.slidingWindowSize=10
    resilience4j.circuitbreaker.instances.order.minimumNumberOfCalls=7
    resilience4j.circuitbreaker.instances.order.failureRateThreshold=60
    resilience4j.circuitbreaker.instances.order.slowCallDurationThreshold=10s
    resilience4j.circuitbreaker.instances.order.permittedNumberOfCallsInHalfOpenState=3
    resilience4j.circuitbreaker.instances.order.waitDurationInOpenState=1m
    resilience4j.circuitbreaker.instances.order.ignoreExceptions[0]=com.my.app.model.exception.ApiRejectedException

    resilience4j.retry.instances.order.maxAttempts=3
    resilience4j.retry.instances.order.waitDuration=5s
    resilience4j.retry.instances.order.enableExponentialBackoff=true
    resilience4j.retry.instances.order.exponentialBackoffMultiplier=2
    resilience4j.retry.instances.order.ignoreExceptions[0]=com.my.app.model.exception.ApiRejectedException