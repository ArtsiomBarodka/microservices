version: '3'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
    healthcheck:
      test: ["CMD", "nc", "-vz", "localhost", "29092"]
      interval: 5s
      timeout: 10s
      retries: 5
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  mysql:
    image: mysql:8.0
    volumes:
      - mysql:/var/lib/mysql
    ports:
      - "3307:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "-u$$MYSQL_USER", "-p$$MYSQL_ROOT_PASSWORD",  "ping", "-h", "localhost"]
      interval: 5s
      timeout: 10s
      retries: 5
    restart: always
    environment:
      MYSQL_DATABASE: microservices
      MYSQL_USER: user
      MYSQL_PASSWORD: password
      MYSQL_ROOT_PASSWORD: password

  mongodb:
    image: mongo:5.0
    volumes:
      - mongodb:/data/db
    ports:
      - "27017:27017"
    restart: unless-stopped
    healthcheck:
      test: ["CMD","mongo", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
    environment:
      MONGO_INITDB_ROOT_USERNAME: user
      MONGO_INITDB_ROOT_PASSWORD: password

  mongo-express:
    image: mongo-express:latest
    depends_on:
      mongodb:
        condition: service_healthy
    volumes:
      - mongodb
    ports:
      - "8881:8081"
    environment:
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_MONGODB_ENABLE_ADMIN: "true"
      ME_CONFIG_MONGODB_ADMINUSERNAME: user
      ME_CONFIG_MONGODB_ADMINPASSWORD: password
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: password

  config-server:
    image: application/config-server:latest
    depends_on:
      kafka:
          condition: service_healthy
    ports:
      - "8888:8888"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8888/actuator/health"]
      interval: 30s
      timeout: 5s
      retries: 5
    environment:
      SERVER_PORT: 8888
      EUREKA_CLIENT_ENABLED: "false"
      GIT_TOKEN: ${GIT_TOKEN}
      KAFKA_URI: http://kafka:9092

  order:
    image: application/order:latest
    depends_on:
      config-server:
        condition: service_healthy
      kafka:
        condition: service_healthy
      mysql:
        condition: service_healthy
    ports:
      - "8081:8081"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/actuator/health"]
      interval: 30s
      timeout: 5s
      retries: 5
    environment:
      SERVER_PORT: 8081
      EUREKA_CLIENT_ENABLED: "false"
      CONFIG_URI: http://config-server:8888/
      KAFKA_URI: http://kafka:9092
      MYSQL_URL: mysql:3306

  product:
    image: application/product:latest
    depends_on:
      config-server:
        condition: service_healthy
      kafka:
        condition: service_healthy
      mongodb:
        condition: service_healthy
    ports:
      - "8082:8082"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8082/actuator/health"]
      interval: 30s
      timeout: 5s
      retries: 5
    environment:
      SERVER_PORT: 8082
      EUREKA_CLIENT_ENABLED: "false"
      CONFIG_URI: http://config-server:8888/
      KAFKA_URI: http://kafka:9092
      MONGO_DB_HOST: mongodb
      MONGO_DB_PORT: 27017

  api-gateway:
    image: application/api-gateway:latest
    depends_on:
      config-server:
        condition: service_healthy
      kafka:
        condition: service_healthy
    ports:
      - "8887:8887"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8887/actuator/health"]
      interval: 30s
      timeout: 5s
      retries: 5
    environment:
      SERVER_PORT: 8887
      EUREKA_CLIENT_ENABLED: "false"
      CONFIG_URI: http://config-server:8888
      KAFKA_URI: http://kafka:9092
      ORDER_URI: http://order:8081
      PRODUCT_URI: http://product:8082

volumes:
  mysql:
  mongodb: