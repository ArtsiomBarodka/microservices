version: '3.9'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    ports:
      - "22181:2181"
    restart: unless-stopped
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "nc", "-vz", "localhost", "29092"]
      interval: 10s
      timeout: 15s
      retries: 7
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  mysql_order:
    image: mysql:8.0
    volumes:
      - mysql_order:/var/lib/mysql
    ports:
      - "3307:3306"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "-u$$MYSQL_USER", "-p$$MYSQL_ROOT_PASSWORD",  "ping", "-h", "localhost"]
      interval: 5s
      timeout: 10s
      retries: 7
    environment:
      MYSQL_DATABASE: microservices
      MYSQL_USER: user
      MYSQL_PASSWORD: password
      MYSQL_ROOT_PASSWORD: password

  mysql_customer:
    image: mysql:8.0
    volumes:
      - mysql_customer:/var/lib/mysql
    ports:
      - "3308:3306"
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "mysqladmin", "-u$$MYSQL_USER", "-p$$MYSQL_ROOT_PASSWORD",  "ping", "-h", "localhost" ]
      interval: 5s
      timeout: 10s
      retries: 7
    environment:
      MYSQL_DATABASE: microservices
      MYSQL_USER: user
      MYSQL_PASSWORD: password
      MYSQL_ROOT_PASSWORD: password

  mongodb:
    image: mongo:5.0
    volumes:
      - mongodb:/data/db
    ports:
      - "27017:27017"
    restart: unless-stopped
    healthcheck:
      test: ["CMD","mongo", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 7
    environment:
      MONGO_INITDB_ROOT_USERNAME: user
      MONGO_INITDB_ROOT_PASSWORD: password

  mongo-express:
    image: mongo-express:latest
    depends_on:
      mongodb:
        condition: service_healthy
    ports:
      - "8881:8081"
    environment:
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_MONGODB_ENABLE_ADMIN: "true"
      ME_CONFIG_MONGODB_ADMINUSERNAME: user
      ME_CONFIG_MONGODB_ADMINPASSWORD: password
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: password

  zipkin:
    image: openzipkin/zipkin
    ports:
      - "9411:9411"

  logstash:
    image: docker.elastic.co/logstash/logstash:8.2.0
    restart: unless-stopped
    volumes:
      - "../../../elk/logstash.conf:/usr/share/logstash/pipeline/logstash.conf:ro"
      - shared_logs_volume:/usr/logs
    depends_on:
      elasticsearch:
        condition: service_healthy

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.2.0
    volumes:
      - elastic-data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl --fail http://localhost:9200 || exit 1",
        ]
      interval: 30s
      timeout: 10s
      retries: 7
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"

  kibana:
    image: docker.elastic.co/kibana/kibana:8.2.0
    restart: unless-stopped
    ports:
      - "5601:5601"
    depends_on:
      elasticsearch:
        condition: service_healthy
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl --fail http://localhost:5601 || exit 1",
        ]
      interval: 30s
      timeout: 10s
      retries: 7
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200

  postgres-keycloak:
    image: postgres:11
    volumes:
      - keycloak-data:/var/lib/postgresql/data
    ports:
      - "5406:5432"
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 30s
      timeout: 5s
      retries: 7
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=keycloak

  keycloak:
    image: jboss/keycloak
    ports:
      - "8090:8080"
    depends_on:
      postgres-keycloak:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "curl", "-I", "http://localhost:8080/auth"]
      interval: 30s
      timeout: 5s
      retries: 8
    environment:
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: admin
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_VENDOR: postgres
      DB_ADDR: postgres-keycloak
      DB_PORT: 5432

  discovery-server:
    image: application/discovery-server:latest
    volumes:
      - shared_logs_volume:/opt/logs
    ports:
      - "8761:8761"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8761/actuator/health"]
      interval: 30s
      timeout: 5s
      retries: 7
    environment:
      SERVER_PORT: 8761
      LOGGING_FILE_NAME: logs/discovery-server/discovery-server.log

  config-server:
    image: application/config-server:latest
    volumes:
      - shared_logs_volume:/opt/logs
    depends_on:
      discovery-server:
          condition: service_healthy
      kafka:
          condition: service_healthy
    ports:
      - "8888:8888"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8888/actuator/health"]
      interval: 30s
      timeout: 5s
      retries: 7
    environment:
      SERVER_PORT: 8888
      EUREKA_URI: http://discovery-server:8761/eureka/
      GIT_TOKEN: ${GIT_TOKEN}
      KAFKA_URI: http://kafka:9092
      LOGGING_FILE_NAME: logs/config-server/config-server.log

  order-orchestrator:
    image: application/order-orchestrator:latest
    volumes:
      - shared_logs_volume:/opt/logs
    depends_on:
      config-server:
        condition: service_healthy
      discovery-server:
        condition: service_healthy
      kafka:
        condition: service_healthy
    ports:
      - "8084:8084"
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8084/actuator/health" ]
      interval: 30s
      timeout: 5s
      retries: 7
    environment:
      SERVER_PORT: 8084
      EUREKA_URI: http://discovery-server:8761/eureka/
      CONFIG_URI: http://config-server:8888/
      KAFKA_URI: http://kafka:9092
      ZIPKIN_URI: http://zipkin:9411/
      LOGGING_FILE_NAME: logs/order-orchestrator/order-orchestrator.log

  order:
    image: application/order:latest
    volumes:
      - shared_logs_volume:/opt/logs
    depends_on:
      config-server:
        condition: service_healthy
      discovery-server:
        condition: service_healthy
      kafka:
        condition: service_healthy
      mysql_order:
        condition: service_healthy
      keycloak:
        condition: service_healthy
      order-orchestrator:
        condition: service_healthy
    ports:
      - "8081:8081"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/actuator/health"]
      interval: 30s
      timeout: 5s
      retries: 7
    environment:
      SERVER_PORT: 8081
      EUREKA_URI: http://discovery-server:8761/eureka/
      CONFIG_URI: http://config-server:8888/
      KAFKA_URI: http://kafka:9092
      MYSQL_URL: mysql_order:3306
      ZIPKIN_URI: http://zipkin:9411/
      RESOURCE_SERVER_URI: http://keycloak:8080
      LOGGING_FILE_NAME: logs/order/order.log

  order-graphql:
    image: application/order-graphql:latest
    volumes:
      - shared_logs_volume:/opt/logs
    depends_on:
      config-server:
        condition: service_healthy
      discovery-server:
        condition: service_healthy
      kafka:
        condition: service_healthy
      order:
        condition: service_healthy
      customer:
        condition: service_healthy
      product:
        condition: service_healthy
    ports:
      - "8086:8086"
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8086/actuator/health" ]
      interval: 30s
      timeout: 5s
      retries: 7
    environment:
      SERVER_PORT: 8086
      EUREKA_URI: http://discovery-server:8761/eureka/
      CONFIG_URI: http://config-server:8888/
      KAFKA_URI: http://kafka:9092
      ZIPKIN_URI: http://zipkin:9411/
      RESOURCE_SERVER_URI: http://keycloak:8080
      LOGGING_FILE_NAME: logs/order-graphql/order-graphql.log

  customer:
    image: application/customer:latest
    volumes:
      - shared_logs_volume:/opt/logs
    depends_on:
      config-server:
        condition: service_healthy
      discovery-server:
        condition: service_healthy
      kafka:
        condition: service_healthy
      mysql_customer:
        condition: service_healthy
      keycloak:
        condition: service_healthy
    ports:
      - "8083:8083"
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8083/actuator/health" ]
      interval: 30s
      timeout: 5s
      retries: 7
    environment:
      SERVER_PORT: 8083
      EUREKA_URI: http://discovery-server:8761/eureka/
      CONFIG_URI: http://config-server:8888/
      KAFKA_URI: http://kafka:9092
      MYSQL_URL: mysql_customer:3306
      ZIPKIN_URI: http://zipkin:9411/
      RESOURCE_SERVER_URI: http://keycloak:8080
      LOGGING_FILE_NAME: logs/customer/customer.log

  product-search:
    image: application/product-search:latest
    volumes:
      - shared_logs_volume:/opt/logs
    depends_on:
      config-server:
        condition: service_healthy
      discovery-server:
        condition: service_healthy
      kafka:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
      keycloak:
        condition: service_healthy
    ports:
      - "8085:8085"
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8085/actuator/health" ]
      interval: 30s
      timeout: 5s
      retries: 9
    environment:
      SERVER_PORT: 8085
      EUREKA_URI: http://discovery-server:8761/eureka/
      CONFIG_URI: http://config-server:8888/
      KAFKA_URI: http://kafka:9092
      ZIPKIN_URI: http://zipkin:9411/
      ELASTIC_SEARCH_URI: elasticsearch:9200
      RESOURCE_SERVER_URI: http://keycloak:8080
      LOGGING_FILE_NAME: logs/product-search/product.log

  product:
    image: application/product:latest
    volumes:
      - shared_logs_volume:/opt/logs
    depends_on:
      config-server:
        condition: service_healthy
      discovery-server:
        condition: service_healthy
      kafka:
        condition: service_healthy
      mongodb:
        condition: service_healthy
      keycloak:
        condition: service_healthy
      product-search:
        condition: service_healthy
    ports:
      - "8082:8082"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8082/actuator/health"]
      interval: 30s
      timeout: 5s
      retries: 7
    environment:
      SERVER_PORT: 8082
      EUREKA_URI: http://discovery-server:8761/eureka/
      CONFIG_URI: http://config-server:8888/
      KAFKA_URI: http://kafka:9092
      ZIPKIN_URI: http://zipkin:9411/
      RESOURCE_SERVER_URI: http://keycloak:8080
      MONGO_DB_HOST: mongodb
      MONGO_DB_PORT: 27017
      LOGGING_FILE_NAME: logs/product/product.log

  api-gateway:
    image: application/api-gateway:latest
    volumes:
      - shared_logs_volume:/opt/logs
    depends_on:
      config-server:
        condition: service_healthy
      discovery-server:
        condition: service_healthy
      kafka:
        condition: service_healthy
      order:
        condition: service_healthy
      customer:
        condition: service_healthy
      product:
        condition: service_healthy
    ports:
      - "8887:8887"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8887/actuator/health"]
      interval: 30s
      timeout: 5s
      retries: 7
    environment:
      SERVER_PORT: 8887
      EUREKA_URI: http://discovery-server:8761/eureka/
      CONFIG_URI: http://config-server:8888/
      KAFKA_URI: http://kafka:9092
      ZIPKIN_URI: http://zipkin:9411/
      LOGGING_FILE_NAME: logs/api-gateway/api-gateway.log

volumes:
  mysql_order:
  mysql_customer:
  mongodb:
  elastic-data:
  shared_logs_volume:
  keycloak-data: