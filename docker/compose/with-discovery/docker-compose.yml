version: '3.9'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    ports:
      - "22181:2181"
    restart: unless-stopped
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "nc", "-vz", "localhost", "29092"]
      interval: 5s
      timeout: 10s
      retries: 5
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  mysql_order:
    image: mysql:8.0
    volumes:
      - mysql_order:/var/lib/mysql
    ports:
      - "3307:3306"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "-u$$MYSQL_USER", "-p$$MYSQL_ROOT_PASSWORD",  "ping", "-h", "localhost"]
      interval: 5s
      timeout: 10s
      retries: 5
    environment:
      MYSQL_DATABASE: microservices
      MYSQL_USER: user
      MYSQL_PASSWORD: password
      MYSQL_ROOT_PASSWORD: password

  mysql_customer:
    image: mysql:8.0
    volumes:
      - mysql_customer:/var/lib/mysql
    ports:
      - "3308:3306"
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "mysqladmin", "-u$$MYSQL_USER", "-p$$MYSQL_ROOT_PASSWORD",  "ping", "-h", "localhost" ]
      interval: 5s
      timeout: 10s
      retries: 5
    environment:
      MYSQL_DATABASE: microservices
      MYSQL_USER: user
      MYSQL_PASSWORD: password
      MYSQL_ROOT_PASSWORD: password

  mongodb:
    image: mongo:5.0
    volumes:
      - mongodb:/data/db
    ports:
      - "27017:27017"
    restart: unless-stopped
    healthcheck:
      test: ["CMD","mongo", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
    environment:
      MONGO_INITDB_ROOT_USERNAME: user
      MONGO_INITDB_ROOT_PASSWORD: password

  mongo-express:
    image: mongo-express:latest
    depends_on:
      mongodb:
        condition: service_healthy
    ports:
      - "8881:8081"
    environment:
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_MONGODB_ENABLE_ADMIN: "true"
      ME_CONFIG_MONGODB_ADMINUSERNAME: user
      ME_CONFIG_MONGODB_ADMINPASSWORD: password
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: password

  discovery-server:
    image: application/discovery-server:latest
    ports:
      - "8761:8761"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8761/actuator/health"]
      interval: 30s
      timeout: 5s
      retries: 5
    environment:
      SERVER_PORT: 8761

  config-server:
    image: application/config-server:latest
    depends_on:
      discovery-server:
          condition: service_healthy
      kafka:
          condition: service_healthy
    ports:
      - "8888:8888"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8888/actuator/health"]
      interval: 30s
      timeout: 5s
      retries: 5
    environment:
      SERVER_PORT: 8888
      EUREKA_URI: http://discovery-server:8761/eureka/
      GIT_TOKEN: ${GIT_TOKEN}
      KAFKA_URI: http://kafka:9092

  order-orchestrator:
    image: application/order-orchestrator:latest
    depends_on:
      config-server:
        condition: service_healthy
      discovery-server:
        condition: service_healthy
      kafka:
        condition: service_healthy
    ports:
      - "8084:8084"
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8084/actuator/health" ]
      interval: 30s
      timeout: 5s
      retries: 5
    environment:
      SERVER_PORT: 8084
      EUREKA_URI: http://discovery-server:8761/eureka/
      CONFIG_URI: http://config-server:8888/
      KAFKA_URI: http://kafka:9092

  order:
    image: application/order:latest
    depends_on:
      config-server:
        condition: service_healthy
      discovery-server:
        condition: service_healthy
      kafka:
        condition: service_healthy
      mysql_order:
        condition: service_healthy
      order-orchestrator:
        condition: service_healthy
    ports:
      - "8081:8081"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/actuator/health"]
      interval: 30s
      timeout: 5s
      retries: 5
    environment:
      SERVER_PORT: 8081
      EUREKA_URI: http://discovery-server:8761/eureka/
      CONFIG_URI: http://config-server:8888/
      KAFKA_URI: http://kafka:9092
      MYSQL_URL: mysql_order:3306

  customer:
    image: application/customer:latest
    depends_on:
      config-server:
        condition: service_healthy
      discovery-server:
        condition: service_healthy
      kafka:
        condition: service_healthy
      mysql_customer:
        condition: service_healthy
    ports:
      - "8083:8083"
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8083/actuator/health" ]
      interval: 30s
      timeout: 5s
      retries: 5
    environment:
      SERVER_PORT: 8083
      EUREKA_URI: http://discovery-server:8761/eureka/
      CONFIG_URI: http://config-server:8888/
      KAFKA_URI: http://kafka:9092
      MYSQL_URL: mysql_customer:3306

  product:
    image: application/product:latest
    depends_on:
      config-server:
        condition: service_healthy
      discovery-server:
        condition: service_healthy
      kafka:
        condition: service_healthy
      mongodb:
        condition: service_healthy
    ports:
      - "8082:8082"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8082/actuator/health"]
      interval: 30s
      timeout: 5s
      retries: 5
    environment:
      SERVER_PORT: 8082
      EUREKA_URI: http://discovery-server:8761/eureka/
      CONFIG_URI: http://config-server:8888/
      KAFKA_URI: http://kafka:9092
      MONGO_DB_HOST: mongodb
      MONGO_DB_PORT: 27017

  api-gateway:
    image: application/api-gateway:latest
    depends_on:
      config-server:
        condition: service_healthy
      discovery-server:
        condition: service_healthy
      kafka:
        condition: service_healthy
      order:
        condition: service_healthy
      customer:
        condition: service_healthy
      product:
        condition: service_healthy
    ports:
      - "8887:8887"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8887/actuator/health"]
      interval: 30s
      timeout: 5s
      retries: 5
    environment:
      SERVER_PORT: 8887
      EUREKA_URI: http://discovery-server:8761/eureka/
      CONFIG_URI: http://config-server:8888/
      KAFKA_URI: http://kafka:9092

volumes:
  mysql_order:
  mysql_customer:
  mongodb: