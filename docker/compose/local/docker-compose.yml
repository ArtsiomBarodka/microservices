version: '3.9'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    ports:
      - "22181:2181"
    restart: unless-stopped
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "nc", "-vz", "localhost", "29092"]
      interval: 5s
      timeout: 10s
      retries: 5
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  mysql_order:
    image: mysql:8.0
    volumes:
      - mysql_order:/var/lib/mysql
    ports:
      - "3307:3306"
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "mysqladmin", "-u$$MYSQL_USER", "-p$$MYSQL_ROOT_PASSWORD",  "ping", "-h", "localhost" ]
      interval: 5s
      timeout: 10s
      retries: 5
    environment:
      MYSQL_DATABASE: microservices
      MYSQL_USER: user
      MYSQL_PASSWORD: password
      MYSQL_ROOT_PASSWORD: password

  mysql_customer:
    image: mysql:8.0
    volumes:
      - mysql_customer:/var/lib/mysql
    ports:
      - "3308:3306"
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "mysqladmin", "-u$$MYSQL_USER", "-p$$MYSQL_ROOT_PASSWORD",  "ping", "-h", "localhost" ]
      interval: 5s
      timeout: 10s
      retries: 5
    environment:
      MYSQL_DATABASE: microservices
      MYSQL_USER: user
      MYSQL_PASSWORD: password
      MYSQL_ROOT_PASSWORD: password

  mongodb:
    image: mongo:5.0
    volumes:
      - mongodb:/data/db
    ports:
      - "27017:27017"
    restart: unless-stopped
    healthcheck:
      test: ["CMD","mongo", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
    environment:
      MONGO_INITDB_ROOT_USERNAME: user
      MONGO_INITDB_ROOT_PASSWORD: password

  mongo-express:
    image: mongo-express:latest
    depends_on:
      mongodb:
        condition: service_healthy
    ports:
      - "8881:8081"
    restart: unless-stopped
    environment:
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_MONGODB_ENABLE_ADMIN: "true"
      ME_CONFIG_MONGODB_ADMINUSERNAME: user
      ME_CONFIG_MONGODB_ADMINPASSWORD: password
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: password

  zipkin:
    image: openzipkin/zipkin
    ports:
      - "9411:9411"
    restart: unless-stopped

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.2.0
    volumes:
      - elastic-data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl --fail http://localhost:9200 || exit 1",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"

  kibana:
    image: docker.elastic.co/kibana/kibana:8.2.0
    restart: unless-stopped
    ports:
      - "5601:5601"
    depends_on:
      elasticsearch:
        condition: service_healthy
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl --fail http://localhost:5601 || exit 1",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200

volumes:
    mysql_order:
    mysql_customer:
    mongodb:
    elastic-data: